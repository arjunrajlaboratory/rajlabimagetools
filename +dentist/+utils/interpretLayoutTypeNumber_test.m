dentist.tests.cleanupForTests;

[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(1);
nextFileDirection = 'right';
secondaryDirection = 'down';
snakeOrNoSnake = 'nosnake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(2);
nextFileDirection = 'right';
secondaryDirection = 'down';
snakeOrNoSnake = 'snake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(3);
nextFileDirection = 'left';
secondaryDirection = 'down';
snakeOrNoSnake = 'nosnake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(4);
nextFileDirection = 'left';
secondaryDirection = 'down';
snakeOrNoSnake = 'snake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(5);
nextFileDirection = 'down';
secondaryDirection = 'right';
snakeOrNoSnake = 'nosnake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(6);
nextFileDirection = 'down';
secondaryDirection = 'right';
snakeOrNoSnake = 'snake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(7);
nextFileDirection = 'up';
secondaryDirection = 'right';
snakeOrNoSnake = 'nosnake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(8);
nextFileDirection = 'up';
secondaryDirection = 'right';
snakeOrNoSnake = 'snake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(9);
nextFileDirection = 'up';
secondaryDirection = 'left';
snakeOrNoSnake = 'nosnake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
[n, s, tf] = dentist.utils.interpretLayoutTypeNumber(10);
nextFileDirection = 'up';
secondaryDirection = 'left';
snakeOrNoSnake = 'snake';
assert(strcmp(n, nextFileDirection) && strcmp(s, secondaryDirection) && strcmp(tf, snakeOrNoSnake));
