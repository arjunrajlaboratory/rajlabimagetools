improc2: A Refactoring of Raj Lab image processing.
Gautham Nair
November 2013

Goals:
- Design Processors for extension by "plug and play" rather than by "copy and paste":
	encapsulate only things that *must* be together in Class definitions
	Use Composition and Single/Multiple Inheritance to build more complex classes
	Use calls to superclass methods to create more complex methods in subclasses.
	allow Abstract classes to define partially specified patterns of behavior
- A more abstract access to image_objects:
	Interfaces to image_objects and images that are usable without knowing how they are stored on disk.
	Benefits:
		Less clunky "boilerplate" code in user/developer scripts
		User/developer needs less awareness of on-disk implementation.
		Will allow developers to make a common access interface to image_objects with
			a different on-disk structure, such as Dentist-based objects.  
- Refactor long functions with plenty of repetition into digestible chunks by using subfunctions/methods.
- Avoid code duplication.

SubProjects:
- Object Iterators and Image Providers:
	imageObjectIterator / Updater:	provide iterators for going through all objects in a
		directory without having to know how exactly they are stored in the directory
	ImageObject(Full/Cropped)StkProvider: Gives access to the image corresponding to an
		image and channel, while avoiding reloading images when possible. 
	Documentation:
		In the header comments of the *.m files.

- Processors: These are all re-implemented and should be more easily extensible. 

Full documentation in *.m files to come, but for now, find a test script for all classes in 'proctests.m'

See classdiagram pictures in this directory for a visual representation of the class hierarchy.

**NOTICE:  *metadata* is GONE from the processors. 

- 'Channels': These are ported almost verbatim from the old +channels. package. They are simple enough
	that they have needed no refactoring.

- processimageobjects:
	Works the same as processimageobjects2 but quite different under the hood. 
	*HOWEVER* - the GUI is *not* implemented. Only the command-line interface is allowed.
